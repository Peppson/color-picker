<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:sys="clr-namespace:System;assembly=mscorlib">

    <BooleanToVisibilityConverter x:Key="BoolToVisibilityConverter" />

    <!--  Window border  -->
    <Style x:Key="WindowBorderStyle" TargetType="{x:Type Border}">
        <Setter Property="BorderBrush" Value="{DynamicResource WindowBorder}" />
        <Setter Property="BorderThickness" Value="2,1,2,2" />
        <Style.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, Path=WindowState}" Value="Maximized">
                <Setter Property="BorderThickness" Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <!--  Window Titlebar Buttons  -->
    <Style x:Key="TitleBarButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="Transparent"
                        BorderThickness="0"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Focusable="False"
                            RecognizesAccessKey="True" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource TitleBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource TitleBarButtonHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Window Titlebar Button Close  -->
    <Style x:Key="TitleBarCloseButtonStyle" TargetType="Button">
        <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="WindowChrome.IsHitTestVisibleInChrome" Value="True" />
        <Setter Property="IsTabStop" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border
                        x:Name="border"
                        Background="Transparent"
                        BorderThickness="0"
                        SnapsToDevicePixels="true">
                        <ContentPresenter
                            x:Name="contentPresenter"
                            Margin="0"
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center"
                            Focusable="False"
                            RecognizesAccessKey="True" />
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource TitleBarButtonCloseHover}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter TargetName="border" Property="Background" Value="{DynamicResource TitleBarButtonCloseHover}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  Zoom Slider  -->
    <Style x:Key="ZoomSliderStyle" TargetType="Slider">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Slider">
                    <Grid>
                        <Track x:Name="PART_Track" VerticalAlignment="Center">
                            <Track.DecreaseRepeatButton>
                                <RepeatButton
                                    Height="3"
                                    Background="Black"
                                    BorderThickness="0"
                                    IsHitTestVisible="False" />
                            </Track.DecreaseRepeatButton>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
                                    Height="3"
                                    Background="Black"
                                    BorderThickness="0"
                                    IsHitTestVisible="False" />
                            </Track.IncreaseRepeatButton>
                            <Track.Thumb>
                                <Thumb Width="11" Height="19">
                                    <Thumb.Template>
                                        <ControlTemplate TargetType="Thumb">
                                            <Border
                                                x:Name="PART_ThumbBorder"
                                                BorderBrush="Transparent"
                                                BorderThickness="1" />
                                        </ControlTemplate>
                                    </Thumb.Template>
                                </Thumb>
                            </Track.Thumb>
                        </Track>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  ContextMenu Style  -->
    <Style x:Key="ContextMenuStyle" TargetType="ContextMenu">
        <Setter Property="Background" Value="{DynamicResource WindowBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource Border}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="Width" Value="80" />
        <Setter Property="HasDropShadow" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ContextMenu">
                    <Border
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <StackPanel IsItemsHost="True" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--  MenuItem Style  -->
    <Style x:Key="MenuItemStyle" TargetType="MenuItem">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Foreground" Value="{DynamicResource PrimaryText}" />
        <Setter Property="Height" Value="30" />
        <Setter Property="Padding" Value="2" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="MenuItem">
                    <Border
                        x:Name="Border"
                        Padding="{TemplateBinding Padding}"
                        Background="{TemplateBinding Background}">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>

                            <!--  Checkmark  -->
                            <TextBlock
                                Grid.Column="0"
                                Margin="0,0,0,0"
                                HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                FontSize="15"
                                FontWeight="Bold"
                                Foreground="{DynamicResource PrimaryText}"
                                Text="✓"
                                Visibility="{Binding IsChecked, RelativeSource={RelativeSource TemplatedParent}, Converter={StaticResource BoolToVisibilityConverter}}" />

                            <!--  Text  -->
                            <ContentPresenter
                                Grid.Column="1"
                                VerticalAlignment="Center"
                                Content="{TemplateBinding Header}"
                                TextBlock.Foreground="{TemplateBinding Foreground}" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsHighlighted" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{DynamicResource TitleBarButtonHover}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="{DynamicResource OnTopDisabled}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>