<UserControl
    x:Class="ColorPicker.Components.Settings"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:config="clr-namespace:ColorPicker.Settings"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:fa="http://schemas.fontawesome.io/icons/"
    xmlns:local="clr-namespace:ColorPicker.Components"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    FontFamily="Consolas"
    mc:Ignorable="d">

    <Grid Background="{StaticResource SettingsWindowBackground}" PreviewMouseDown="Grid_PreviewMouseDown">
        <Grid Background="{StaticResource SettingsBackground}" SnapsToDevicePixels="True">
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid Grid.Row="0" Margin="12,18,12,0">
                <CheckBox
                    x:Name="CaptureOnBoot"
                    Height="15"
                    VerticalContentAlignment="Center"
                    BorderBrush="{StaticResource Border}"
                    Content="Enable color capture on startup"
                    Foreground="{StaticResource PrimaryText}"
                    IsChecked="{Binding BootWithCaptureEnabled, Mode=TwoWay}" />

            </Grid>

            <CheckBox
                x:Name="CaptureOnSelf"
                Grid.Row="1"
                Height="15"
                Margin="12,10,0,0"
                VerticalContentAlignment="Center"
                BorderBrush="{StaticResource Border}"
                Content="Include ColorGrab in color capture"
                Foreground="{StaticResource PrimaryText}"
                IsChecked="{Binding CaptureOnSelf, Mode=TwoWay}" />

            <CheckBox
                x:Name="SetWindowOnBoot"
                Grid.Row="2"
                Height="15"
                Margin="12,10,0,0"
                VerticalContentAlignment="Center"
                BorderBrush="{StaticResource Border}"
                Content="Remember window position"
                Foreground="{StaticResource PrimaryText}"
                IsChecked="{Binding SetWindowPosOnStartup, Mode=TwoWay}" />

            <CheckBox
                x:Name="SetZoomLevelOnBoot"
                Grid.Row="3"
                Height="15"
                Margin="12,10,0,0"
                VerticalContentAlignment="Center"
                BorderBrush="{StaticResource Border}"
                Content="Remember zoom level"
                Foreground="{StaticResource PrimaryText}"
                IsChecked="{Binding SetZoomLevelOnStartup, Mode=TwoWay}" />

            <!--  Hotkey  -->
            <Grid
                Grid.Row="4"
                Height="15"
                Margin="12,10,12,0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>

                <CheckBox
                    x:Name="KeybindInputCheckBox"
                    Grid.Column="0"
                    HorizontalAlignment="Left"
                    VerticalContentAlignment="Center"
                    BorderBrush="{StaticResource Border}"
                    Content="Global hotkey"
                    Foreground="{StaticResource PrimaryText}"
                    IsChecked="{Binding GlobalHotkeyEnabled, Mode=TwoWay}" />

                <fa:ImageAwesome
                    Grid.Column="1"
                    Width="14"
                    Height="14"
                    Margin="0,0,6,0"
                    Cursor="Hand"
                    Icon="QuestionCircle"
                    ToolTipService.InitialShowDelay="100">
                    <fa:ImageAwesome.Style>
                        <Style TargetType="fa:ImageAwesome">
                            <Setter Property="Foreground" Value="{StaticResource PrimaryText}" />
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsChecked, ElementName=KeybindInputCheckBox}" Value="False">
                                    <Setter Property="Foreground" Value="{StaticResource DisableBackground}" />
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </fa:ImageAwesome.Style>

                    <fa:ImageAwesome.ToolTip>
                        <ToolTip>
                            <TextBlock>
                                Hotkey must include at least one modifier:<LineBreak />
                                Ctrl, Alt, or Shift.</TextBlock>
                        </ToolTip>
                    </fa:ImageAwesome.ToolTip>
                </fa:ImageAwesome>

                <TextBox
                    x:Name="KeybindInput"
                    Grid.Column="2"
                    Width="140"
                    Height="24"
                    Margin="0,-5,0,-4"
                    HorizontalAlignment="Right"
                    VerticalAlignment="Center"
                    HorizontalContentAlignment="Center"
                    VerticalContentAlignment="Center"
                    Background="{StaticResource PrimaryText}"
                    BorderBrush="Black"
                    BorderThickness="1"
                    Cursor="Hand"
                    Focusable="True"
                    Foreground="Black"
                    GotFocus="KeybindInput_GotFocus"
                    IsEnabled="{Binding IsChecked, ElementName=KeybindInputCheckBox}"
                    IsReadOnly="True"
                    LostFocus="KeybindInput_LostFocus"
                    PreviewKeyDown="KeybindInput_PreviewKeyDown" />
            </Grid>

            <!--  Version  -->
            <TextBlock
                Grid.Row="6"
                Margin="14,0,0,0"
                HorizontalAlignment="Left"
                VerticalAlignment="Center"
                FontWeight="Bold"
                Foreground="{StaticResource PrimaryText}"
                Text="{x:Static config:Config.VersionNumber}" />

            <!--  Button  -->
            <StackPanel
                Grid.Row="6"
                Margin="0,0,12,14"
                HorizontalAlignment="Right"
                VerticalAlignment="Center"
                Orientation="Horizontal">

                <Button
                    Width="140"
                    Height="24"
                    Background="{StaticResource PrimaryText}"
                    Click="BackButton_Click"
                    Content="Back"
                    Cursor="Hand"
                    Foreground="Black">

                    <Button.Style>
                        <Style BasedOn="{StaticResource {x:Type Button}}" TargetType="Button">
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="Button">
                                        <Border
                                            Background="{TemplateBinding Background}"
                                            BorderBrush="{TemplateBinding BorderBrush}"
                                            BorderThickness="1"
                                            CornerRadius="0">
                                            <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                        </Border>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="BorderBrush" Value="{StaticResource LogoBlue}" />
                                </Trigger>
                                <Trigger Property="IsMouseOver" Value="False">
                                    <Setter Property="BorderBrush" Value="Black" />
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
